diff --git a/third_party/WebKit/Source/core/paint/ThemePainterMac.mm b/third_party/WebKit/Source/core/paint/ThemePainterMac.mm
index a8f507a..5b54b7d 100644
--- a/third_party/WebKit/Source/core/paint/ThemePainterMac.mm
+++ b/third_party/WebKit/Source/core/paint/ThemePainterMac.mm
@@ -43,6 +43,7 @@
 
 // The methods in this file are specific to the Mac OS X platform.
 
+#ifndef MAS_BUILD
 // Forward declare Mac SPIs.
 extern "C" {
 void _NSDrawCarbonThemeBezel(NSRect frame, BOOL enabled, BOOL flipped);
@@ -52,6 +53,7 @@ void _NSDrawCarbonThemeListBox(NSRect frame,
                                BOOL flipped,
                                BOOL always_yes);
 }
+#endif
 
 namespace blink {
 
@@ -72,9 +74,11 @@ void _NSDrawCarbonThemeListBox(NSRect frame,
   // behavior change while remaining a fragile solution.
   // https://bugs.chromium.org/p/chromium/issues/detail?id=658085#c3
   if (!useNSTextFieldCell) {
+#ifndef MAS_BUILD
     _NSDrawCarbonThemeBezel(
         r, LayoutTheme::isEnabled(o) && !LayoutTheme::isReadOnlyControl(o),
         YES);
+#endif
     return false;
   }
 
@@ -159,9 +163,11 @@ void _NSDrawCarbonThemeListBox(NSRect frame,
                                     const PaintInfo& paintInfo,
                                     const IntRect& r) {
   LocalCurrentGraphicsContext localContext(paintInfo.context, r);
+#ifndef MAS_BUILD
   _NSDrawCarbonThemeListBox(
       r, LayoutTheme::isEnabled(o) && !LayoutTheme::isReadOnlyControl(o), YES,
       YES);
+#endif
   return false;
 }
 
diff --git a/third_party/WebKit/Source/platform/mac/KillRingMac.mm b/third_party/WebKit/Source/platform/mac/KillRingMac.mm
index 1e74ced..6fde87a 100644
--- a/third_party/WebKit/Source/platform/mac/KillRingMac.mm
+++ b/third_party/WebKit/Source/platform/mac/KillRingMac.mm
@@ -27,6 +27,7 @@
 
 namespace blink {
 
+#ifndef MAS_BUILD
 extern "C" {
 
 // Kill ring calls. Would be better to use NSKillRing.h, but that's not
@@ -39,38 +40,53 @@
 void _NSNewKillRingSequence();
 void _NSSetKillRingToYankedState();
 }
+#endif
 
 static void initializeKillRingIfNeeded() {
   static bool initializedKillRing = false;
   if (!initializedKillRing) {
     initializedKillRing = true;
+#ifndef MAS_BUILD
     _NSInitializeKillRing();
+#endif
   }
 }
 
 void KillRing::append(const String& string) {
   initializeKillRingIfNeeded();
+#ifndef MAS_BUILD
   _NSAppendToKillRing(string);
+#endif
 }
 
 void KillRing::prepend(const String& string) {
   initializeKillRingIfNeeded();
+#ifndef MAS_BUILD
   _NSPrependToKillRing(string);
+#endif
 }
 
 String KillRing::yank() {
   initializeKillRingIfNeeded();
+#ifndef MAS_BUILD
   return _NSYankFromKillRing();
+#else
+  return "";
+#endif
 }
 
 void KillRing::startNewSequence() {
   initializeKillRingIfNeeded();
+#ifndef MAS_BUILD
   _NSNewKillRingSequence();
+#endif
 }
 
 void KillRing::setToYankedState() {
   initializeKillRingIfNeeded();
+#ifndef MAS_BUILD
   _NSSetKillRingToYankedState();
+#endif
 }
 
 }  // namespace blink
