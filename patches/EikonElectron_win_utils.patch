 sandbox/win/src/win_utils.cc | 24 ++++++++++++++++++++++++
 1 file changed, 24 insertions(+)

diff --git a/sandbox/win/src/win_utils.cc b/sandbox/win/src/win_utils.cc
index 178fd91..ba48c9c 100644
--- a/sandbox/win/src/win_utils.cc
+++ b/sandbox/win/src/win_utils.cc
@@ -122,6 +122,21 @@ bool IsPipe(const base::string16& path) {
   return EqualPath(path, start, kPipe, arraysize(kPipe) - 1);
 }
 
+
+// Returns true if the provided path points to MountPointManager.
+bool IsMountPointManager(const base::string16& path) {
+	size_t start = 0;
+	if (0 == path.compare(0, sandbox::kNTPrefixLen, sandbox::kNTPrefix))
+		start = sandbox::kNTPrefixLen;
+
+	const wchar_t kMountPointManager[] = L"MountPointManager";
+	//if (path.size() < start + arraysize(kMountPointManager) - 1)
+	//	return false;
+
+	return EqualPath(path, start, kMountPointManager, arraysize(kMountPointManager) - 1);
+}
+
+
 HKEY GetReservedKeyFromName(const base::string16& name) {
   for (size_t i = 0; i < arraysize(kKnownKey); ++i) {
     if (name == kKnownKey[i].name)
@@ -164,6 +179,9 @@ DWORD IsReparsePoint(const base::string16& full_path) {
   if (IsPipe(full_path))
     return ERROR_NOT_A_REPARSE_POINT;
 
+  if (IsMountPointManager(full_path))
+    return ERROR_NOT_A_REPARSE_POINT;
+
   base::string16 path;
   bool nt_path = IsNTPath(full_path, &path);
   bool has_drive = StartsWithDriveLetter(path);
@@ -217,6 +235,9 @@ bool SameObject(HANDLE handle, const wchar_t* full_path) {
   if (IsPipe(full_path))
     return true;
 
+  if (IsMountPointManager(full_path))
+	  return true;
+
   base::string16 actual_path;
   if (!GetPathFromHandle(handle, &actual_path))
     return false;
@@ -282,6 +303,9 @@ bool ConvertToLongPath(base::string16* path) {
   if (IsPipe(*path))
     return true;
 
+  if (IsMountPointManager(*path))
+	  return true;
+
   base::string16 temp_path;
   if (IsDevicePath(*path, &temp_path))
     return false;
